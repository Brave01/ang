回顾：
1 引用
1）引用型函数参数
2）引用型函数返回值
3）引用和指针
2 类型转换
1）静态类型转换
2）常类型转换
3）重解释类型转换

3 类和对象
--------------------------
今天：
十三 类的定义和实例化
1 类的的语法形式
  struct/class  类名:继承方式 基类{
  访问控制限定符:
  		类名(形参表):初始化表{...}//构造函数
  		~类名(void){...}	//析构函数
  		返回类型 函数名(形参表){} //成员函数
  		数据类型 变量名;//成员变量
  };
2 访问控制限定符：影响类中成员的访问位置
1）public,公有成员,在任何位置都可以访问
2）private,私有成员,只有类的内部才能访问
3）protected,保护成员(后面讲)

3 构造函数(Constructor)
语法：
class 类名{
	类名(构造形参表){
		//主要负责初始化对象,即初始化成员变量
	}
};
1）函数名与类名相同，没有返回类型
2）构造函数在创建对象时自动被调用和执行，不能像普通的成员函数通过对象去调用。

练习：实现一个电子时钟类，使用构造接收当前的系统时间，以秒为单位运行。
提示：
	class Clock{
	public:
		Clock(time_t t){
			tm* local = localtime(&t);
			m_hour = local->tm_hour;
			m_min = local->tm_min;
			m_sec = local->tm_sec;
		}
		void run(void){
			while(1){
				//打印当前时间
				//计时+1秒
				//sleep(1);
			}
		}
	private:
		int m_hour;
		int m_min;
		int m_sec;
	};
	
	time_t time();//返回当前系统时间的秒值
	struct tm* localtime(time_t*);

4 对象的创建和销毁
1）在栈区创建单个对象
	类名 对象(构造实参表);	
	类名 对象 = 类名(构造实参表)；
2）在栈区创建多个对象(对象数组)//了解
	类名 对象数组[元素个数] = {
		类名(构造实参表),类名(构造实参表),...};
3）在堆区创建/销毁单个对象
创建：类名* 对象指针 = new 类名(构造实参表);
销毁：delete 对象指针;
4）在堆区创建/销毁多个对象(对象数组)//了解
创建：
	类名* 对象指针 = new 类型[元素个数]{
		类名(构造实参表),类名(构造实参表),...};
销毁：
	delete[] 对象指针;

5 多文件编程
1）类的声明放在头文件(.h)
2）类的实现放在源文件(.cpp)

十四 构造函数和初始化表
1 构造函数可以重载、可以带有缺省参数
2 缺省构造函数(无参构造函数)
1)如果一个类没有定义构造函数，编译器会提供一个缺省的(无参)构造函数。
-->对于基本类型的成员变量不做初始化
-->对于类 类型的成员变量(成员子对象)，会自动调用相应的类的无参构造函数来初始化。
2)如果自己定义了构造函数，无论是否有参数，编译器都不会再提供缺省的构造函数了。
	eg:
	class XX{
		int id;//基本类型的成员变量
		string name;//类 类型的成员变量
	};
	XX x;
	cout << x.id << endl;//未初始化
	cout << x.name << endl;//一定是空""
	
3 类型转换构造函数（单参构造函数）
	class 目标类型{
		[explicit] 目标类型(源类型){...}
	};
	可以实现源类型到目标类型的隐式转换。
	注：使用explicit关键字，可以强制这种转换必须显式的完成。

4 拷贝(复制)构造函数
1）用一个已存在的对象构造同类型的副本对象时，会调用该类的拷贝构造函数
   class 类名{
   	类名(const 类名&){...}
   };
	eg：
	class A{...}；
	A a1;
	A a2(a1);//调用拷贝构造函数
2）如果一个类中没有定义拷贝构造函数，那么编译器会为其提供一个缺省的拷贝构造函数
-->对基本类型成员变量，按字节复制
-->对类 类型成员变量(成员子对象)，自动的调用相应类型的拷贝构造函数。
	注：多数情况下不需要自己写拷贝构造函数，因为编译器缺省提供的拷贝构造函数已经很好用了.

3）拷贝构造函数调用时机
--》用已存在的对象作为同类对象的构造实参 
--》以对象的形式向函数传递参数 
--》从函数中返回对象(有可能被编译器优化掉)	

5 初始化表
1）语法
	class 类名{
		类名(形参表):成员变量(初值),...{}
	};
2）如果有类 类型成员变量(成员子对象)，而该类又没有无参构造函数，则必须使用初始化表来初始化该成员变量.

练习：复习当天内容

扩展练习V2.0：企业员工管理系统
	需求：完善Employee员工类
	1）将类的声明和定义分开实现
	2）增加构造函数
	3）创建员工对象(栈区、堆区)
	*4）尝试编写Makefile